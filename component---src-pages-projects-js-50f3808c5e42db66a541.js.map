{"version":3,"sources":["webpack:///./src/components/projects/project-card.js","webpack:///./src/pages/projects.js"],"names":["ProjectCard","project","to","slug","className","src","cover","childImageSharp","resize","avatar","alt","title","dangerouslySetInnerHTML","__html","description","defaultProps","Project","edges","data","allProjectsYaml","useState","query","setQuery","Projects","filter","edge","node","toLowerCase","startsWith","map","key","id","style","top","type","placeholder","onChange","e","target","value","pageQuery"],"mappings":"yKAMMA,EAAc,SAAC,GAAD,IAAGC,EAAH,EAAGA,QAAH,OAClB,kBAAC,OAAD,CAAMC,GAAI,aAAeD,EAAQE,KAAMC,UAAU,4BAC/C,yBAAKA,UAAU,QACbC,IAAKJ,EAAQK,MAAQL,EAAQK,MAAMC,gBAAgBC,OAAOH,IAAMI,IAChEC,IAAKT,EAAQE,KAAR,aAEP,yBAAKC,UAAU,uBACb,wBAAIA,UAAU,QAAQH,EAAQU,OAC9B,yBAAKC,wBAAyB,CAAEC,OAAQZ,EAAQa,kBAStDd,EAAYe,aAAe,CACzBd,QAAS,MAGID,Q,mDC2BAgB,UA5CC,SAAC,GAIV,IAFgBC,EAEjB,EAHJC,KACEC,gBAAmBF,MAEjB,EACuBG,mBAAS,IAA7BC,EADH,KACUC,EADV,KAMEC,EAJSN,EAAMO,QAAO,SAAAC,GAC1B,GAAIA,EAAKC,KAAKf,MAAMgB,cAAcC,WAAWP,EAAMM,eACjD,OAAO,KAEaE,KAAI,SAAAJ,GAAI,OAC9B,yBAAKK,IAAKL,EAAKC,KAAKK,GAAI3B,UAAU,oCAChC,kBAAC,EAAD,CAAaH,QAASwB,EAAKC,WAI/B,OACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAKf,MAAM,aACX,kBAAC,IAAD,CAAUA,MAAM,aAChB,yBAAKP,UAAU,eACb,yBAAKA,UAAU,4CACb,yBAAKA,UAAU,iBAAiBmB,IAElC,yBAAKnB,UAAU,kDACb,yBAAKA,UAAU,2BAA2B4B,MAAO,CAAEC,IAAK,QAAUF,GAAG,eACnE,wBAAI3B,UAAU,QAAd,mBACA,yBAAKA,UAAU,QACb,+CACA,2BACE2B,GAAG,aACHG,KAAK,OACL9B,UAAU,sBACV+B,YAAY,cACZC,SAAU,SAAAC,GAAC,OAAIf,EAASe,EAAEC,OAAOC,UAEnC,mCApCd,IA8CaC,EAAS","file":"component---src-pages-projects-js-50f3808c5e42db66a541.js","sourcesContent":["import PropTypes from \"prop-types\"\nimport React from \"react\"\nimport { Link } from \"gatsby\"\n\nimport avatar from \"../../images/defaults/avatar.png\"\n\nconst ProjectCard = ({ project }) => (\n  <Link to={\"/projects/\" + project.slug} className=\"card no-decoration h-100\">\n    <img className=\"cover\"\n      src={project.cover ? project.cover.childImageSharp.resize.src : avatar}\n      alt={project.slug + `'s image`}\n    />\n    <div className=\"text-dark px-4 py-4\">\n      <h6 className=\"mb-2\">{project.title}</h6>\n      <div dangerouslySetInnerHTML={{ __html: project.description}} />\n    </div>\n  </Link>\n)\n\nProjectCard.propTypes = {\n  project: PropTypes.any,\n}\n\nProjectCard.defaultProps = {\n  project: null,\n}\n\nexport default ProjectCard\n","import React, { useState } from \"react\"\n\nimport Layout from \"../components/layout\"\nimport SEO from \"../components/seo\"\n\nimport { graphql } from \"gatsby\"\n\nimport ProjectCard from \"../components/projects/project-card.js\"\nimport TitleBar from \"../components/theme/title-bar\"\n\nconst Project = ({\n  data: {\n    allProjectsYaml: { edges },\n  },\n}) => {\n  const [query, setQuery]  = useState('');\n  const filter = edges.filter(edge => {\n    if (edge.node.title.toLowerCase().startsWith(query.toLowerCase()))\n      return 1\n  })\n  const Projects = filter.map(edge => (\n    <div key={edge.node.id} className=\"col-xl-5 col-md-10 col-sm-6 pb-4\">\n      <ProjectCard project={edge.node} />\n    </div>\n  ))\n\n  return (\n    <Layout>\n      <SEO title=\"Projects\" />\n      <TitleBar title=\"Projects\" />\n      <div className=\"row m-0 p-1\">\n        <div className=\"col-md-8 col-lg-9 p-2 order-2 order-md-1\">\n          <div className=\"row mx-2 my-4\">{Projects}</div>\n        </div>\n        <div className=\"col-md-4 col-lg-3 order-md-2 order-1 px-2 py-4\">\n          <div className=\"card p-4 position-sticky\" style={{ top: \"1rem\" }} id=\"filter-card\">\n            <h5 className=\"my-3\">Search & Filter</h5>\n            <div className=\"mx-2\">\n              <div>Search by Name</div>\n              <input\n                id=\"search-box\"\n                type=\"text\"\n                className=\"form w-100 p-2 mt-2\"\n                placeholder=\"Search Here\"\n                onChange={e => setQuery(e.target.value)}\n              />\n              <hr />\n            </div>\n          </div>\n        </div>\n      </div>\n    </Layout>\n  )\n}\nexport default Project\n\nexport const pageQuery = graphql`\n  query {\n    allProjectsYaml {\n      edges {\n        node {\n          id\n          title\n          members{\n            user\n            role\n          }\n          gallery {\n            childImageSharp{\n              resize(width: 500) {\n                src\n              }\n            }\n          }\n          slug\n          description\n          cover {\n            childImageSharp {\n              resize(width: 500) {\n                src\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n`\n"],"sourceRoot":""}