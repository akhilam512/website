{"version":3,"sources":["webpack:///./src/pages/members.js","webpack:///./src/components/theme/member-card.js"],"names":["Members","props","goTop","window","scrollTo","state","searchTerm","filterRole","handleSearch","event","this","setState","target","value","memberFilter","render","filteredMembers","data","allMembersYaml","edges","filter","edge","qflag","query","toLowerCase","rflag","role","node","username","startsWith","firstName","split","forEach","part","lastName","indexOf","hide","title","id","style","position","right","bottom","backgroundColor","borderRadius","fontSize","zIndex","onClick","className","length","map","key","tag","avatar","childImageSharp","resize","src","top","type","placeholder","onChange","bind","React","Component","pageQuery","MemberCard","tagline","to","defaultAvatar","alt","defaultProps"],"mappings":"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","file":"component---src-pages-members-js-a3e73e42fc0d722c986d.js","sourcesContent":["import React from \"react\"\nimport { graphql } from \"gatsby\"\n\nimport Layout from \"../components/layout\"\nimport SEO from \"../components/seo\"\n\nimport MemberCard from \"../components/theme/member-card.js\"\nimport TitleBar from \"../components/theme/title-bar\"\n\nexport default class Members extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      searchTerm: \"\",\n      filterRole: \"active\",\n    }\n  }\n\n  goTop = () => {\n    window.scrollTo(0, 0);\n  }\n\n  handleSearch(event) {\n    this.goTop()\n    this.setState({\n      searchTerm: event.target.value,\n    })\n  }\n  memberFilter(event){\n    this.goTop()\n    this.setState({\n      filterRole: event.target.value,\n    })\n  }\n\n  render() {\n    let filteredMembers = this.props.data.allMembersYaml.edges.filter(edge => {\n      let qflag = 1\n      let query = this.state.searchTerm.toLowerCase()\n      let rflag = 1\n      let role = this.state.filterRole\n      if (query !== \"\") {\n        qflag = 0\n        // Search matches username\n        if (edge.node.username.toLowerCase().startsWith(query))\n          qflag = 1\n        // Search matches username\n        if (edge.node.firstName) {\n          edge.node.firstName\n            .toLowerCase()\n            .split(\" \")\n            .forEach(part => {\n              if (part.startsWith(query)) qflag = 1\n            })\n        }\n        if (edge.node.lastName) {\n          edge.node.lastName\n            .toLowerCase()\n            .split(\" \")\n            .forEach(part => {\n              if (part.startsWith(query)) qflag = 1\n            })\n        }\n      }\n      if(role !== \"all\")\n      {\n         rflag = 0\n         if(role === \"active\")\n         {\n           if([\"Member\", \"Mentor\", \"Alumni Mentor\", \"Faculty Mentor\"].indexOf(edge.node.role) !== -1)\n             rflag = 1\n         }\n         else if(edge.node.role === this.state.filterRole)\n           rflag = 1\n      }\n      if(qflag&&rflag&&!edge.node.hide) return 1\n    })\n    return (\n      <Layout>\n        <SEO title=\"Members\" />\n        <TitleBar title=\"Members\" id=\"members\" />\n        <a\n          style={{position: 'fixed', right: '1rem', bottom: '1rem', backgroundColor: '#ffc107', borderRadius: '100vh', fontSize: \"1.2rem\", zIndex: 5000 }}\n           onClick={() => { this.goTop()}}\n           className=\"fas fa-angle-up p-3\"\n        />\n        <div className=\"row m-0 p-1\">\n          <div className=\"col-md-8 col-lg-9 p-2 order-2 order-md-1\">\n            <div className=\"m-2\">\n            { this.state.filterRole === \"all\" ? \"Showing Everyone\" : (\n                <>Showing {filteredMembers.length} {\n                this.state.filterRole === \"active\" ? \"Active Members\" : null\n              } of {this.props.data.allMembersYaml.edges.length} Members.\n              </>\n            )}\n            </div>\n            <div className=\"row m-0 p-1 mb-4\">\n              {filteredMembers.map(edge => (\n                <div\n                  key={edge.node.id}\n                  className=\"col-6 col-md-6 col-lg-4 col-xl-3 p-2\"\n                >\n                  <MemberCard\n                    username={edge.node.username}\n                    firstName={edge.node.firstName}\n                    lastName={edge.node.lastName}\n                    tag={edge.node.role}\n                    avatar={\n                      edge.node.avatar\n                        ? edge.node.avatar.childImageSharp.resize.src\n                        : null\n                    }\n                  />\n                </div>\n              ))}\n            </div>\n          </div>\n          <div className=\"col-md-4 col-lg-3 order-md-2 order-1 px-2 py-4\">\n            <div className=\"card p-4 position-sticky\" style={{ top: \"1rem\" }} id=\"filter-card\">\n              <h5 className=\"my-3\">Search & Filter</h5>\n              <div className=\"mx-2\">\n                <div>Search by Name</div>\n                <input\n                  id=\"search-box\"\n                  type=\"text\"\n                  className=\"form w-100 p-2 mt-2\"\n                  placeholder=\"Search Here\"\n                  onChange={this.handleSearch.bind(this)}\n                />\n                <hr />\n              </div>\n              <div className=\"mb-4 mx-2\">\n                <div>Filter By Role</div>\n                <select className=\"bg-white p-2 w-100 mt-2\" onChange={this.memberFilter.bind(this)} value={this.state.filterRole}>\n                  <option value=\"active\">{this.state.filterRole === \"active\" ? 'Change Role' : ' Active' }</option>\n                  <option value=\"all\">Everyone</option>\n                  <option value=\"Member\">Members</option>\n                  <option value=\"Mentor\">Mentors</option>\n                  <option value=\"Alumni\">Alumni</option>\n                  <option value=\"Alumni Mentor\">Alumni Mentors</option>\n                  <option value=\"Faculty Mentor\">Faculty Mentors</option>\n                </select>\n              </div>\n            </div>\n          </div>\n        </div>\n      </Layout>\n    )\n  }\n}\n\nexport const pageQuery = graphql`\n  query {\n    allMembersYaml(sort: { fields: firstName, order: ASC }) {\n      edges {\n        node {\n          id\n          firstName\n          lastName\n          tagline\n          username\n          role\n          hide\n          avatar {\n            childImageSharp {\n              resize(width: 300) {\n                src\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n`\n","import PropTypes from \"prop-types\"\nimport React from \"react\"\nimport { Link } from \"gatsby\"\n\nimport defaultAvatar from \"../../images/defaults/avatar.png\"\n\nconst MemberCard = ({ username, firstName, lastName, avatar, tag, tagline }) => (\n  <Link to={\"/@\" + username} className=\"member-card card\">\n    <img\n      src={avatar ? avatar : defaultAvatar}\n      alt={firstName + \" \" + lastName + `'s photo`}\n    />\n    <div className={\"role-tag \" + tag}>{tag}</div>\n    <div>\n      <h6>{firstName} {lastName}</h6>\n      <sub>{tagline}</sub>\n    </div>\n  </Link>\n)\n\nMemberCard.propTypes = {\n  username: PropTypes.string,\n  firstName: PropTypes.string,\n  lastName: PropTypes.string,\n  avatar: PropTypes.string,\n  tagline: PropTypes.string,\n  tag: PropTypes.string\n}\n\nMemberCard.defaultProps = {\n  username: \"\",\n  firstName: \"\",\n  lastName: \"\",\n  avatar: \"\",\n  tagline: \"\",\n  tag: \"Member\"\n}\n\nexport default MemberCard\n"],"sourceRoot":""}