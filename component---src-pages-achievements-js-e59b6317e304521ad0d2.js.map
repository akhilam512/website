{"version":3,"sources":["webpack:///./src/components/achievements/achievement-list.js","webpack:///./src/components/achievements/gsoc.js","webpack:///./src/components/achievements/internships.js","webpack:///./src/components/achievements/talks.js","webpack:///./src/components/achievements/summerSchool.js","webpack:///./src/pages/achievements.js","webpack:///./src/components/theme/getProfiles.js","webpack:///./src/components/theme/list-card.js"],"names":["AchievementList","title","members","tagname","years","Set","map","obj","node","Year","Array","from","useState","year","setYear","profiles","getProfiles","filtered","filter","member","className","name","onChange","event","target","value","key","profile","find","username","Member","tagline","id","firstName","lastName","avatar","childImageSharp","resize","src","query","render","data","allGSoCYaml","edges","allInternshipsYaml","allTalksYaml","allSummerSchoolYaml","Achievements","allMembersYaml","ListCard","icon","to","defaultAvatar","alt","style","width","maxWidth","minWidth","defaultProps"],"mappings":"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","file":"component---src-pages-achievements-js-e59b6317e304521ad0d2.js","sourcesContent":["import React, { useState } from \"react\"\nimport getProfiles from \"../theme/getProfiles\"\nimport ListCard from \"../theme/list-card\"\n\nconst AchievementList = ({ title, members, tagname }) => {\n  let years = [...new Set( members.map(obj => obj.node.Year)) ]\n  years =  Array.from(years[0])\n  const [year, setYear] = useState(years[0]);\n  const profiles = getProfiles()\n  let filtered = members.filter( member => member.node.Year == year)\n  return (\n    <div className=\"list-card card\">\n      <div className=\"list-heading d-flex\">\n        <div className=\"w-75\">{title}</div>\n        <div className=\"w-25\">\n          <select\n            name=\"years\"\n            onChange={event => setYear(event.target.value)}\n            value={year}\n          >\n            {\n              years.map((year, key) =>\n                <option key={key} value={year}>{year}</option>\n              )\n            }\n          </select>\n        </div>\n      </div>\n      {\n        filtered.map(member => {\n          let profile = profiles.find(\n            profile => profile.node.username === member.node.Member\n          )\n          const tagline = member.node[tagname]\n          return profile ?\n            <ListCard\n              key={member.node.id}\n              username={profile.node.username}\n              firstName={profile.node.firstName}\n              lastName={profile.node.lastName}\n              tagline={tagline}\n              avatar={profile.node.avatar ? profile.node.avatar.childImageSharp.resize.src : null}\n            /> : null\n        })\n      }\n    </div>\n  )\n}\n\nexport default AchievementList;","import React from \"react\"\nimport { StaticQuery, graphql } from \"gatsby\"\nimport AchievementList from \"./achievement-list\"\n\nexport default () => (\n  <StaticQuery\n    query={graphql`\n      query {\n        allGSoCYaml {\n          totalCount\n          edges {\n            node {\n              id\n              Member\n              Year\n              Org\n            }\n          }\n        }\n      }\n    `}\n    render={data => (\n      <div className=\"p-2\">\n          <AchievementList title=\"Google Summer of Code\" members={data.allGSoCYaml.edges} tagname=\"Org\" />\n      </div>\n    )}\n  />\n)\n","import React from \"react\"\nimport { StaticQuery, graphql } from \"gatsby\"\nimport AchievementList from \"./achievement-list\"\n\nexport default () => (\n  <StaticQuery\n    query={graphql`\n      query {\n        allInternshipsYaml {\n          totalCount\n          edges {\n            node {\n              id\n              Member\n              Year\n              Company\n            }\n          }\n        }\n      }\n    `}\n    render={data => (\n      <div className=\"p-2\">\n        <AchievementList title=\"Internships\"  members={data.allInternshipsYaml.edges} tagname=\"Company\" />\n      </div>\n    )}\n  />\n)\n","import React from \"react\"\nimport { StaticQuery, graphql } from \"gatsby\"\nimport AchievementList from \"./achievement-list\"\n\nexport default () => (\n  <StaticQuery\n    query={graphql`\n      query {\n        allTalksYaml {\n          totalCount\n          edges {\n            node {\n              id\n              Member\n              Event\n              Year\n            }\n          }\n        }\n      }\n    `}\n    render={data => (\n      <div className=\"p-2\">\n          <AchievementList title=\"Speaker (Talks)\" members={data.allTalksYaml.edges} tagname=\"Event\" />\n      </div>\n    )}\n  />\n)\n","import React from \"react\"\nimport { StaticQuery, graphql } from \"gatsby\"\nimport AchievementList from \"./achievement-list\"\n\nexport default () => (\n  <StaticQuery\n    query={graphql`\n      query {\n        allSummerSchoolYaml {\n          totalCount\n          edges {\n            node {\n              id\n              Member\n              Year\n              University\n            }\n          }\n        }\n      }\n    `}\n    render={data => (\n      <div className=\"p-2\">\n        <AchievementList title=\"Summer School\"  members={data.allSummerSchoolYaml.edges} tagname=\"University\" />\n      </div>\n    )}\n  />\n)\n","import React from \"react\"\n\nimport Layout from \"../components/layout\"\nimport SEO from \"../components/seo\"\nimport TitleBar from \"../components/theme/title-bar\"\n\nimport GSoC from \"../components/achievements/gsoc\"\nimport Internship from \"../components/achievements/internships\"\nimport Talks from \"../components/achievements/talks\"\nimport SummerSchool from \"../components/achievements/summerSchool\"\n\nconst Achievements = () => (\n  <Layout>\n    <SEO title=\"Achievements\" />\n    <TitleBar title=\"Achievements\" />\n    <div className=\"row m-0 px-2 py-4\">\n      <div className=\"col-md-6 col-lg-4 px-2 py-0\">\n        <GSoC />\n      </div>\n      <div className=\"col-md-6 col-lg-4 px-2 py-0\">\n        <Internship />\n      </div>\n      <div className=\"col-md-6 col-lg-4 px-2 py-0\">\n        <SummerSchool />\n        <Talks />\n      </div>\n    </div>\n  </Layout>\n)\n\nexport default Achievements\n","import { useStaticQuery, graphql } from \"gatsby\"\n\nexport default () => {\n  const data = useStaticQuery(graphql`\n    {\n      allMembersYaml {\n        edges {\n          node {\n            firstName\n            lastName\n            username\n            avatar {\n              childImageSharp {\n                resize {\n                  src\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  `)\n  return data.allMembersYaml.edges\n}\n","import PropTypes from \"prop-types\"\nimport React from \"react\"\nimport { Link } from \"gatsby\"\n\nimport defaultAvatar from \"../../images/defaults/avatar.png\"\n\nconst ListCard = ({ username, firstName, lastName, avatar, tagline, title, icon }) => (\n   username ?\n      (<Link to={\"/@\" + username} className=\"card\">\n        <div className=\"d-flex\">\n          <div className=\"p-0\">\n            <img\n              src={avatar ? avatar : defaultAvatar}\n              alt={firstName + \" \" + lastName + `'s photo`}\n            />\n          </div>\n          <div className=\"item-details\">\n            <div>\n              <h6> {firstName} {lastName} </h6>\n              <div className=\"list-tagline\">{tagline}</div>\n            </div>\n          </div>\n        </div>\n      </Link>) :\n      (<div className=\"card px-4 pt-4 pb-2 h-100 text-center my-2\">\n          <div className=\"mt-2\">\n            <img\n              src={icon ? icon : null}\n              alt={title}\n              style={{width: \"15vmax\", maxWidth: \"100%\", minWidth: \"180px\"}}\n            />\n          </div>\n          <h5 className=\"mt-4\">{title}</h5>\n          <div className=\"list-tagline\">{tagline}</div>\n      </div>)\n)\n\nListCard.propTypes = {\n  username: PropTypes.string,\n  firstName: PropTypes.string,\n  lastName: PropTypes.string,\n  avatar: PropTypes.string,\n  tagline: PropTypes.string,\n}\n\nListCard.defaultProps = {\n  username: \"\",\n  firstName: \"\",\n  lastName: \"\",\n  avatar: \"\",\n  tagline: \"\",\n}\n\nexport default ListCard\n"],"sourceRoot":""}